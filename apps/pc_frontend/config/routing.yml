# openpne rules
homepage:
  url:   /
  param: { module: member, action: home }

obj_member_profile:
  url:     /member/:id
  class:   sfDoctrineRoute
  options: { model: Member, type: object }
  param:   { module: member, action: profile }
  requirements:
    id:        \d+
    sf_method: [get]

obj_friend_unlink:
  url:     /friend/unlink/:id
  class:   sfDoctrineRoute
  options: { model: Member, type: object }
  param:   { module: friend, action: unlink }
  requirements:
    id: \d+
    sf_method: [get, post]

member_index:
  url:   /member
  param: { module: member, action: home }

error:
  url: /default/error
  param: { module: default, action: error }

# oauth rules
oauth_request_token:
  url:   /oauth/request_token
  param: { module: oauth, action: requestToken }

oauth_authorize_token:
  url:   /oauth/authorize
  param: { module: oauth, action: authorizeToken }

oauth_access_token:
  url:   /oauth/access_token
  param: { module: oauth, action: accessToken }

# connection rules
connection:
  class: opStandardRouteCollection
  options: { model: OAuthConsumerInformation, actions: [show, new, create, edit, update], is_acl: true }

connection_list:
  url:     /connection
  param:   { module: connection, action: list }

# connection_show:
#   url:     /connection/:id
#   class:   sfDoctrineRoute
#   options: { model: OAuthConsumerInformation, type: object }
#   param:   { module: connection, action: show }
#   requirements:
#     id: \d+
#     sf_method: [get]
# 
# connection_new:
#   url:     /connection/new
#   class:   sfRequestRoute
#   param:   { module: connection, action: new }
# 
# connection_create:
#   url:     /connection/create
#   class:   sfRequestRoute
#   param:   { module: connection, action: create }
#   requirements:
#     sf_method: [post]
# 
# connection_edit:
#   url:     /connection/edit/:id
#   class:   sfDoctrineRoute
#   options: { model: OAuthConsumerInformation, type: object }
#   param:   { module: connection, action: edit }
#   requirements:
#     id: \d+
#     sf_method: [get]
# 
# connection_update:
#   url:     /connection/update/:id
#   class:   sfDoctrineRoute
#   options: { model: OAuthConsumerInformation, type: object }
#   param:   { module: connection, action: update }
#   requirements:
#     id: \d+
#     sf_method: [put]

# for BC
member_profile:
  url:   /member/:id
  param: { module: member, action: profile }
  requirements: { id: \d+ }

friend_show_image:
  url:   /friend/showImage/:id
  param: { module: friend, action: showImage }
  requirements: { id: \d+ }

community_home:
  url:   /community/:id
  param: { module: community, action: home }
  requirements: { id: \d+ }

# default rules
default_symfony:
  url:   /symfony/:action/*
  param: { module: default }

default_index:
  url:   /:module
  param: { action: index }

default:
  url:   /:module/:action/*
